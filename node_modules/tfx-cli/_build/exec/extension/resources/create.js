"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var merger_1 = require("../_lib/merger");
var vsix_writer_1 = require("../_lib/vsix-writer");
var Loc = require("../_lib/loc");
var colors = require("colors");
var extBase = require("../default");
var trace = require('../../../lib/trace');
function getCommand(args) {
    return new GenerateExtensionResources(args);
}
exports.getCommand = getCommand;
var GenerateExtensionResources = (function (_super) {
    __extends(GenerateExtensionResources, _super);
    function GenerateExtensionResources(passedArgs) {
        _super.call(this, passedArgs);
        this.description = "Create a vsix package for an extension.";
        this.serverCommand = false;
    }
    GenerateExtensionResources.prototype.getHelpArgs = function () {
        return ["root", "manifests", "manifestGlobs", "override", "overridesFile", "revVersion", "bypassValidation", "publisher", "extensionId", "outputPath", "locRoot"];
    };
    GenerateExtensionResources.prototype.exec = function () {
        var _this = this;
        return this.getMergeSettings().then(function (mergeSettings) {
            return _this.getPackageSettings().then(function (packageSettings) {
                return new merger_1.Merger(mergeSettings).merge().then(function (components) {
                    var writer = new vsix_writer_1.VsixWriter(packageSettings, components);
                    var resjsonPath = writer.getOutputPath(packageSettings.outputPath, "resjson");
                    Loc.LocPrep.writeResourceFile(resjsonPath, components.resources.combined);
                    return {
                        resjsonPath: writer.getOutputPath(packageSettings.outputPath, "resjson")
                    };
                });
            });
        });
    };
    GenerateExtensionResources.prototype.friendlyOutput = function (data) {
        trace.info(colors.green("\n=== Completed operation: generate extension resources ==="));
        trace.info(" - .resjson: %s", data.resjsonPath);
    };
    return GenerateExtensionResources;
}(extBase.ExtensionBase));
exports.GenerateExtensionResources = GenerateExtensionResources;
//# sourceMappingURL=create.js.map